# ———————————— Binary Search in CLU ————————————

# 1) Define a sorted list and the target value
var arr    is 1,3,5,7,9,11,13
var target is 7
var size   is 7

# 2) Initialize bounds and flag
var low   is 1
var high  is size
var found is 0

# 3) Loop until low > high
repeat low less_equal high
    # compute mid = (low + high) // 2
    var sum is low add high
    var mid is sum divide 2

    # fetch the middle element
    var midVal is arr[mid]

    # compare
    if midVal equal target
        var found is 1
        # “break” by forcing low > high
        var low is high add 1
    otherwise
        if midVal greater target
            var high is mid subtract 1
        otherwise
            var low is mid add 1
        end
    end
end

# 4) Report result
if found equal 1
    output 'Found'
otherwise
    output 'Not Found'
end
